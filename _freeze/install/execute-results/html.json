{
  "hash": "3d9c147784a63d3e81e9f526c333b4d1",
  "result": {
    "markdown": "---\ntitle: Installation\nsidebar: false\nlang: fr\n---\n\n\n## Installer `brms` et cie\n\nPour cette formation, vous pourrez utiliser votre propre ordinateur sur lequel vous aurez [installé ou mis à jour](https://pbil.univ-lyon1.fr/CRAN/) `R` (version 4.2.1 souhaitée) et l'interface utilisateur `RStudio` : <https://www.rstudio.com/products/rstudio/>. Nous utiliserons également `Stan` via les paquets `brms` et `rstan`. Vous trouverez toutes les infos pour installer `brms` selon votre plateforme ici : <https://learnb4ss.github.io/learnB4SS/articles/install-brms.html>. **Attention**, cette étape peut être assez longue complexe selon votre plateforme (surtout sur Windows), il faudra veiller à ne pas la réaliser au dernier moment et à ce que tout fonctionne au début de la formation.\n\n## Installer `imsb`\n\nLe reste des paquets ainsi que les données utilisées dans les exercices, et quelques fonctions utiles, peuvent être installées ensemble sous la forme d'un paquet \"companion\" de la formation, le paquet `imsb`. Pour l'installer, vous devez d'abord installer le paquet `remotes`, puis installer `imsb` depuis Github.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"remotes\")\nremotes::install_github(repo = \"lnalborczyk/IMSB2022/_imsb\", dependencies = TRUE)\n```\n:::\n\n\nAu cours de la formation, ce paquet pourra être utilisé pour lire les slides des différents cours (du cours `00` au cours `10`) en ligne via la fonction `open_slides()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(imsb)\nopen_slides(01)\n```\n:::\n\n\nLes jeux de données utilisés dans les différents exercices sont également contenus dans ce paquet. Vous pouvez les importer via la function `data()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(tartine1)\n```\n:::\n\n\n<!--\n\nNous utiliserons les paquets `R` listés ci-dessous, que vous pouvez installer en une seule commande depuis la console :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\n    c(\n        \"data.table\", \"coda\", \"mvtnorm\", \"devtools\", \"MASS\", \"ellipse\",\n        \"rstan\", \"BayesFactor\", \"BEST\", \"coda\", \"LearnBayes\", \"markdown\",\n        \"mcmc\", \"MCMCpack\", \"MuMIn\", \"reshape2\", \"rmarkdown\", \"brms\",\n        \"tidyverse\", \"tidybayes\", \"bayesplot\", \"shinystan\", \"lme4\",\n        \"patchwork\", \"easystats\"\n        ),\n    dependencies = TRUE\n    )\n```\n:::\n\n\nNous utiliserons également un paquet non publié sur le CRAN, que vous pouvez télécharger directement depuis Github, avec la commande suivante en `R` (après avoir installé `devtools`) : `devtools::install_github(\"rmcelreath/rethinking\")`. Si cette commande ne fonctionne pas, se référer aux instructions d'installation détaillées sur le répertoire Github du paquet : <https://github.com/rmcelreath/rethinking>.\n\n-->\n\n## Rappel concernant les pré-requis\n\nBien qu'une bonne connaissance de `R` soit un **pré-requis à l'inscription**, vous trouverez [ici](https://cran.r-project.org/doc/contrib/Torfs+Brauer-Short-R-Intro.pdf) une courte introduction aux bases du langage, qui seront nécessaires afin de bien comprendre les exemples traités lors de la formation.\n",
    "supporting": [
      "install_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}